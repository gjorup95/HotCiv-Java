Test-list for TDD Iteration 1

======= ALPHA CIV =============================

[X] Red is the first player in turn
	[X] It should be blue's turn after red
	[X] Red wins in year 3000 BC

[X] The age of the world decreases by 100 years after end of turn.
[x] There is a city at (1,1)

	[X] It's owned by red
	[X] There is a city (4_1)
	[X] Blue city is at (4_1)

[X] Cities' population size is always 1
[X] Red wins in year 3000 BC

[X] Cities start with zero production
[X] Cities produce 6 'production' after a round has ended
	[X] Red City has 6 production after end of round
	[X] BLue City has 6 production after end of round
	[X] Red City has 12 production after end of round
	[X] BLue City has 12 production after end of round

[X] There should be a unit in (2,0)
	[X] This unit should be a archer
[X] There should be a unit on (3,2)
	[X] This unit should be a legion
[X] There should be a unit on (4,3)
	[x] This unit should be a settler

[X] Red should own a archer and settler
[X] Blue should own a legion

[X] There is ocean at (1,0)
[X] There is Hills on (0,1)
[X] There is Mountain on (2,2)
[X] Units can actually move
    [X] Units can move from (2,0) to 2,2)
    [X] There is no unit at (2,0) after unitMOve()
    [X] Units cannot move over mountain
    [X] Blue cannot move redUnits
[X] Unit attacking - Unit attacking is self implemented by the way hashMap works, whenever a unit moves it overwrites the position, deleting the unit in the place.
[X] Red cannot move Blue's units

[X] Cities should produce one unit when it reaches 6 production - **What does unit Cost?
    [X] The cities should be able to produce different units at production. (legion, settler or archer)
    [] Units produced should be placed on the nearest non occupied tile from start position City
[X] Units cannot be placed on occupied tiles.
[X] Units cannot be spawned on mountains.


======= BETA CIV =============================

[X] refactor AlphaCiv to use a compositional design
    [X] For winning different winning conditions
    [X] For different ageing conditions
[X] handle winner condition for AlphaCiv
	[X] implement winning condition for AlphaCiv in AlphaCiv
	[X] a player can now conquer another players city
[X] handle winner condition for BetaCiv
[X] handle world ageing for BetaCiv
    [X] Between 4000BC and 100BC, 100 years pass per round
    [x] Around birth of Christs, the sequence is -100, -1, +1, +50
    [X] Between 50AD and 1750, 50 years pass per round
    [X] Between 1750 and 1900, 25 years pass per round
    [X] Between 1900 and 1970, 5 years pass per round.
    [X] After 1970, 1 year pass per round.

======= GAMMA CIV =============================
[X] refactor AlphaCiv to use a compositional design
[X] Setller should could perform build city
[X] Archer should could perform fortify, thus doubling its defensive strength

======= DELTA CIV =============================
[X] AlphaCiv Layout Should be handled by a compositional structure
[X] refactor AlphaCiv to use a compositional design
[X] The world's layout is that shown in Figure 36.1 on page 454.
[] Make accessor and mutator methods for different hashmaps so they can be used in interfaces subclasses.
======GENERALLY ================
 [X] Fixed versions of the game at setup for all versions.
 Add fixtures to gameImpl so that it uses different versions of the game depending on the parameter set in gameImpl with a function

============== EPSILON CIV ===================================================================================================
[X] Give each player a total amount of won battles


============== ZETA CIV ===================================================================================================
[] Should use BetaCivWinningConditions before 20 rounds
[] Should use EpsilonCivWinningCondition after 20 rounds